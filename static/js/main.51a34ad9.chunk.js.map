{"version":3,"sources":["components/Recipe.js","Skeletons/SkeletonElement.js","Skeletons/SkeletonRecipe.js","components/Header.js","components/RecipesGrid.js","components/RecipePage.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","ingredients","className","src","alt","SkeletonElement","type","classes","SkeletonRecipe","Header","getSearch","search","updateSearch","popularHandler","onSubmit","value","placeholder","onChange","icon","faSearch","size","to","style","textDecoration","color","onClick","RecipeGrid","recipes","setCurrentIndex","map","recipe","index","label","n","RecipePage","currentIndex","text","App","useState","setRecipes","setSearch","query","setQuery","progress","useRef","useEffect","getrecipes","current","continuousStart","a","fetch","response","json","data","hits","complete","console","log","ref","height","e","preventDefault","target","innerHTML","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51a34ad9.chunk.js","sourcesContent":["import React from \"react\";\n// import style from \"../recipe.module.css\";\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n  return (\n    <div className=\"recipe\">\n      <img className=\"images\" src={image} alt=\"\" />\n      <h2 className=\"title\" >{title}</h2>\n      <p> Calories - {calories}</p>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React from 'react';\nimport './Skeleton.css';\n\nconst SkeletonElement = ({type}) => {\n    const classes = `skeleton ${type}`\n    return(\n        <div className={classes}></div>\n    )\n}\n\nexport default SkeletonElement;","import React from 'react';\nimport SkeletonElement from './SkeletonElement';\nimport './Skeleton.css';\n\nconst SkeletonRecipe = () => {\n    // const classes = `skeleton ${type}`\n    return(\n        <div className=\"skeleton-card\">\n            <SkeletonElement type=\"image\" />\n            <SkeletonElement type=\"title\" />\n            <SkeletonElement type=\"para\" />\n\n        </div>\n    )\n}\n\nexport default SkeletonRecipe;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({getSearch, search, updateSearch, popularHandler}) => {\n  return (\n    <header>\n      <h1 className=\"logo\">Recipes</h1>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search}\n          placeholder=\"Search for your favorite recipes\"\n          onChange={updateSearch}\n        />\n        <button className=\"search-btn\" type=\"submit\">\n          <FontAwesomeIcon icon={faSearch} size=\"lg\" />\n        </button>\n      </form>\n      <ul className=\"nav-list\">\n        <li><Link to=\"/recipes\" style={{textDecoration: 'none', color: 'black'}}>Home</Link></li>\n        <li className=\"popular\">\n          Popular\n          <ul className=\"popular-dropdown\" onClick={popularHandler}>\n            <li>Chicken</li>\n            <li>Mutton</li>\n            <li>Biryani</li>\n            <li>Soup</li>\n          </ul>\n        </li>\n        <li>About</li>\n      </ul>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SkeletonRecipe from \"../Skeletons/SkeletonRecipe\";\nimport Recipe from \"./Recipe\";\n\nconst RecipeGrid = ({ recipes, setCurrentIndex }) => {\n\n  return (\n    <div className=\"recipes\">\n      {recipes &&\n        recipes.map((recipe, index) => (\n          <div onClick={() => setCurrentIndex(index)}>\n            <Link to=\"/recipe\" style={{textDecoration:'none', color:\"black\"}}>\n              <Recipe\n                key={index}\n                title={recipe.recipe.label}\n                calories={recipe.recipe.calories}\n                image={recipe.recipe.image}\n                ingredients={recipe.recipe.ingredients}\n                setCurrentIndex={setCurrentIndex}\n              />\n            </Link>\n          </div>\n        ))}\n\n      {!recipes &&\n        [1, 2, 3, 4, 5, 6, 7, 8, 9].map((n) => <SkeletonRecipe key={n} />)}\n\n      {[1, 2, 3, 4].map((n) => (\n        <div className=\"fillerDivs\" key={n}></div>\n      ))}\n    </div>\n  );\n};\n\nexport default RecipeGrid;\n","import React from \"react\";\n\nconst RecipePage = ({ recipes, currentIndex }) => {\n  return (\n    <div className=\"recipe-page\">\n      <img src={recipes[currentIndex].recipe.image} alt=\"\" />\n      <div className=\"recipe-descriptoin\">\n        <h1>{recipes[currentIndex].recipe.label}</h1>\n        <ul>\n        {recipes[currentIndex].recipe.ingredients.map((ingredients, index) => (\n          <li key={index}>{ingredients.text}</li>\n        ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipePage;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Recipe from \"./components/Recipe\";\nimport SkeletonRecipe from \"./Skeletons/SkeletonRecipe\";\nimport \"./App.css\";\nimport LoadingBar from \"react-top-loading-bar\";\nimport Header from \"./components/Header\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n} from \"react-router-dom\";\nimport RecipeGrid from \"./components/RecipesGrid\";\nimport RecipePage from \"./components/RecipePage\";\n\nconst App = () => {\n  const APP_ID = \"12b28fb1\";\n  const API_KEY = \"172fe97b5c8265bc43881237e14ef1fd\";\n\n  const [recipes, setRecipes] = useState(null);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [currentIndex, setCurrentIndex] = useState(null);\n\n  // const [progress, setProgress] = useState(0);\n  const progress = useRef(null);\n\n  // let filledArray = Array.from({length:6},()=> ({recipe:{label:\"\", calories:\"\", image:\"\", ingredients:\"\"}}));\n  // setrecipes(filledArray);\n\n  useEffect(() => {\n    getrecipes();\n    progress.current.continuousStart();\n  }, [query]);\n\n  const getrecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${API_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    progress.current.complete();\n    console.log(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setRecipes(null);\n    setQuery(search);\n  };\n\n  const popularHandler = (e) => {\n    console.log(e.target.innerHTML);\n    setSearch(e.target.innerHTML);\n    setRecipes(null);\n    setQuery(e.target.innerHTML);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <LoadingBar color=\"#f11946\" ref={progress} height={3} />\n        <Header\n          getSearch={getSearch}\n          search={search}\n          updateSearch={updateSearch}\n          popularHandler={popularHandler}\n        />\n        <Route exact path=\"/\">\n          <Redirect to=\"/recipes\" />\n        </Route>\n        <Route path=\"/recipes\">\n          <RecipeGrid recipes={recipes} setCurrentIndex={setCurrentIndex} />\n        </Route>\n        <Route path=\"/recipe\">\n          {currentIndex && <RecipePage recipes={recipes} currentIndex={currentIndex} />}\n        </Route>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}